// customData = {}  // 自定义数据
// customFunction ()　{}  // 自定义方法
// onLoad () {}  // 在Page和Component共用的生命周期函数
// onShow () {}  // 只在Page中存在的页面生命周期函数
// config = {};  // 只在Page实例中存在的配置数据，对应于原生的page.json文件
// data = {};  // 页面所需数据均需在这里声明，可用于模板数据绑定
// components = {};  // 声明页面中所引用的组件，或声明组件中所引用的子组件
// mixins = [];  // 声明页面所引用的Mixin实例
// computed = {};  // 声明计算属性（详见后文介绍）
// watch = {};  // 声明数据watcher（详见后文介绍）
// methods = {};  // 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明
// 普通自定义方法在methods对象外声明，与methods平级
// events = {};  // 声明组件之间的事件处理函数
//props  {传值}  在WePY中属于  父子组件之间  传值的一种机制

// 页面跳转，传参写法
// this.$redirect('./page2', {a: 1, b: 2})
// this.$redirect({
//   url: './pages?a=1&b=2'
// });
// this.$navigate(url)

// 阴影边框
// box-shadow: #f1fefb 1rpx 1rpx 10rpx 5rpx;

// flexflexflexflexflexflexflexflex
// display: flex;
// align-items: center;
// justify-content: space-between;
// flex-direction: column;

// 居右
// flex-direction:row;
// justify-content:flex-end

// vertical-align:middle;

// overflow:hidden;
// text-overflow:ellipsis;
// white-space:nowrap;

// 自动换行
// word-break:break-all;

// overflow:hidden;
// text-overflow:ellipsis;
// white-space:nowrap;



// background: linear-gradient(to left,#30A2F4,#00E8BD);
<script>

import wepy from 'wepy'
import 'wepy-async-function'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index', // 首页
      'pages/hoteList', // 酒店推荐
      
      'pages/cleaningInfo', // 保洁信息
      'pages/cleaningList', // 保洁推荐
      
      'pages/selHoteRegistered',  // 注册--酒店
      'pages/userInfoSetting',  // 用户--信息设置
      'pages/selUserRegistered',  // 注册--保洁员
      'pages/roomEntry',  // 房间录入
      'pages/selRegisteredType',  // 注册类型选择
    ],
    permission: {
      'scope.userLocation': {
        desc: '你的位置信息将用于小程序位置接口的效果展示'
      }
    },
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    }
  }

  globalData = {
    userInfo: {},
    // 接口请求路径
    requestUrl: 'http://192.168.1.132',
    // 图片路径
    imgUrl: 'http://192.168.1.132',
  }

  // constructor () {
  // }

  onLaunch() {
  }
  // 删除照片
  deleImg(that, e) {
    var idx = e.currentTarget.dataset.idx
    var imgArr = that.data.imgArr || []
    imgArr.splice(idx, 1)
    that.setData({
      imgArr
    })
  }
  // 上传图片
  uploadImg(that) {
    var self = this
    wx.chooseImage({
      success: function (res) {
        wx.showToast({
          title: '图片上传中',
          icon: 'loading'
        });
        var imgArr = that.data.imgArr || [] // 放图片的数组
        var imgLength = that.data.imgLength || 6 //默认上传6张图片
        if (imgArr.length + res.tempFiles.length > imgLength) {
          wx.showToast({
            title: `最多上传${imgLength}张图片`,
            icon: 'none'
          })
          return false
        }
        Promise.all(res.tempFiles.map(item => {
          return new Promise((resolve, reject) => {
            wx.uploadFile({
              url: `${self.globalData.requestUrl}/work/upload_file`,
              filePath: item.path,
              name: 'photo',
              success(res) {
                resolve({
                  path: JSON.parse(res.data).data
                })
              }
            })
          })
        })).then(e => {
          wx.hideToast();
          that.setData({
            imgArr: imgArr.concat(e)
          })
        }).catch(err => console.log(err))
      },
    })
  }
  /**
  * 时间戳转时间
  */
  transformTime(timestamp = +new Date()) {
    if (timestamp) {
      var time = new Date(timestamp);
      var y = time.getFullYear(); //getFullYear方法以四位数字返回年份
      var M = time.getMonth() + 1; // getMonth方法从 Date 对象返回月份 (0 ~ 11)，返回结果需要手动加一
      var d = time.getDate(); // getDate方法从 Date 对象返回一个月中的某一天 (1 ~ 31)
      var h = time.getHours(); // getHours方法返回 Date 对象的小时 (0 ~ 23)
      var m = time.getMinutes(); // getMinutes方法返回 Date 对象的分钟 (0 ~ 59)
      var s = time.getSeconds(); // getSeconds方法返回 Date 对象的秒数 (0 ~ 59)
      return y + '-' + M + '-' + d + ' ' + h + ':' + m + ':' + s;
    } else {
      return '';
    }
  }
  /**
  * null => ''
  * @param {*} data 要处理的数据
  */
  null2str(data) {
    for (let x in data) {
      if (data[x] === null) { // 如果是null 把直接内容转为 ''
        data[x] = ''
      } else {
        if (Array.isArray(data[x])) { // 是数组遍历数组 递归继续处理
          data[x] = data[x].map(z => {
            return this.null2str(z)
          })
        }
        if(typeof(data[x]) === 'object'){ // 是json 递归继续处理
          data[x] = this.null2str(data[x])
        }
      }
    }
    return data
  }
  setStorageCityNode(cityList) {
    wx.setStorage({
      key: 'cityname',
      data: cityList.name
    })
    wx.setStorage({
      key: 'cityid',
      data: cityList.id
    })
  }
  getStorageCityNode() {
    var cityname = wx.getStorageSync('cityname')
    var cityid = wx.getStorageSync('cityid')
    return [cityname, cityid]
  }

}
</script>


<style lang="less">
#getUserInfo{
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  opacity: 0;
  z-index: 999;
}
.sub{
  z-index: 999;
  position: fixed;
  left: 0;
  bottom: 0;
  width: 750rpx;
  height: 190rpx;
  background-color: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
  view{
    width: 690rpx;
    height: 90rpx;
    color: #fff;
    font-size: 32rpx;
    font-weight: 600;
    border-radius: 90rpx;
    background: linear-gradient(to left,#30A2F4,#00E8BD);
    display: flex;
    align-items: center;
    justify-content: center;
  }
}
button::after{
  border: 0;
}
button{
  background-color: none;
}
// 多选框样式
checkbox .wx-checkbox-input{
  border-radius: 50%;/* 圆角 */
  width: 40rpx; /* 背景的宽 */
  height: 40rpx; /* 背景的高 */
}
checkbox .wx-checkbox-input.wx-checkbox-input-checked{
  border: none;
  background: #fc6800;
}
checkbox .wx-checkbox-input.wx-checkbox-input-checked::before{
  border-radius: 50%;/* 圆角 */
  width: 40rpx;/* 选中后对勾大小，不要超过背景的尺寸 */
  height: 40rpx;/* 选中后对勾大小，不要超过背景的尺寸 */
  line-height: 40rpx;
  text-align: center;
  font-size:40rpx; /* 对勾大小 30rpx */
  color:#fff; /* 对勾颜色 白色 */
  background: transparent;
  // transform:translate(-50%, -50%) scale(1);
  // -webkit-transform:translate(-50%, -50%) scale(1);
}

@font-face {font-family: "iconfont";
  src: url('//at.alicdn.com/t/font_1426613_lowz8wumvid.eot?t=1568969276941'); /* IE9 */
  src: url('//at.alicdn.com/t/font_1426613_lowz8wumvid.eot?t=1568969276941#iefix') format('embedded-opentype'), /* IE6-IE8 */
  url('data:application/x-font-woff2;charset=utf-8;base64,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') format('woff2'),
  url('//at.alicdn.com/t/font_1426613_lowz8wumvid.woff?t=1568969276941') format('woff'),
  url('//at.alicdn.com/t/font_1426613_lowz8wumvid.ttf?t=1568969276941') format('truetype'), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */
  url('//at.alicdn.com/t/font_1426613_lowz8wumvid.svg?t=1568969276941#iconfont') format('svg'); /* iOS 4.1- */
}

.iconfont {
  font-family: "iconfont" !important;
  font-size: 16px;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.icondingwei:before {
  content: "\e68a";
}

.iconfangjian:before {
  content: "\e68b";
}

.iconfanhui:before {
  content: "\e68c";
}

.iconxiayibu:before {
  content: "\e68d";
}

.iconwuxing:before {
  content: "\e68e";
}

.iconwuxing1:before {
  content: "\e68f";
}

.iconshouye:before {
  content: "\e690";
}

.iconwode:before {
  content: "\e691";
}

.icondingdan:before {
  content: "\e692";
}

.iconguanbi:before {
  content: "\e693";
}

.iconshangchuan-bei:before {
  content: "\e694";
}

.iconshangchuan-zhen:before {
  content: "\e695";
}

.icondingwei1:before {
  content: "\e696";
}

.icondanxuan:before {
  content: "\e697";
}

.iconweixin:before {
  content: "\e698";
}

.iconshangchuan:before {
  content: "\e699";
}

.iconrenzheng:before {
  content: "\e69a";
}

.iconshuoming:before {
  content: "\e69b";
}

.iconxiala:before {
  content: "\e69c";
}

.iconsousuo:before {
  content: "\e69d";
}

.iconguanbi1:before {
  content: "\e69e";
}

.iconshangchuanzhaopian:before {
  content: "\e69f";
}

.icondanxuan1:before {
  content: "\e6a0";
}

</style>