// customData = {}  // 自定义数据
// customFunction ()　{}  // 自定义方法
// onLoad () {}  // 在Page和Component共用的生命周期函数
// onShow () {}  // 只在Page中存在的页面生命周期函数
// config = {};  // 只在Page实例中存在的配置数据，对应于原生的page.json文件
// data = {};  // 页面所需数据均需在这里声明，可用于模板数据绑定
// components = {};  // 声明页面中所引用的组件，或声明组件中所引用的子组件
// mixins = [];  // 声明页面所引用的Mixin实例
// computed = {};  // 声明计算属性（详见后文介绍）
// watch = {};  // 声明数据watcher（详见后文介绍）
// methods = {};  // 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明
// 普通自定义方法在methods对象外声明，与methods平级
// events = {};  // 声明组件之间的事件处理函数
//props  {传值}  在WePY中属于  父子组件之间  传值的一种机制

// 页面跳转，传参写法
// this.$redirect('./page2', {a: 1, b: 2})
// this.$redirect({
//   url: './pages?a=1&b=2'
// });
// this.$navigate(url)

// 阴影边框
// box-shadow: #f1fefb 1rpx 1rpx 10rpx 5rpx;

// flexflexflexflexflexflexflexflex
// display: flex;
// align-items: center;
// justify-content: space-between;
// 竖向
// flex-direction: column;
// 换行
// display: flex;
// align-items: center;
// justify-content: space-between;
// flex-direction: row;
// flex-wrap: wrap;



// 居右
// flex-direction:row;
// justify-content:flex-end

// vertical-align:middle;

// overflow:hidden;
// text-overflow:ellipsis;
// white-space:nowrap;

// 自动换行
// word-break:break-all;

// overflow:hidden;
// text-overflow:ellipsis;
// white-space:nowrap;



// background: linear-gradient(to left,#30A2F4,#00E8BD);
<script>
import wepy from 'wepy';
import 'wepy-async-function';
export default class extends wepy.app {
  config = {
    pages: [
      'pages/selRegisteredType',  // 注册类型选择

      'pages/index', // 首页
      'pages/citySel', // 城市选择
      'pages/hotelInfo', // 酒店详情
      'pages/hoteList', // 酒店推荐
      'pages/cleaningInfo', // 保洁信息
      'pages/cleaningList', // 保洁推荐

      'pages/user', // 个人中心
      'pages/userMyShare',  // 个人中心--我的分享
      'pages/userRelease',  // 个人中心--发布列表
      'pages/userReleaseList',  // 个人中心--发布列表
      'pages/userRecharge', // 个人中心--充值
      'pages/userWallet', // 个人中心--钱包
      'pages/userInfoSetting',  // 个人中心--信息设置
      'pages/userCleaningCertification',  // 个人中心--保洁认证
      'pages/userhotelgCertification',  // 个人中心--酒店认证
      
      'pages/orderList', // 订单-列表
      'pages/orderInfo', // 订单-详情
      'pages/orderTransfer', // 订单-转单
      'pages/orderEvaluation', // 订单-评价
      'pages/orderConfirm', // 订单-确认

      
      'pages/selHoteRegistered',  // 注册--酒店
      'pages/roomEntry',  // 房间录入
      'pages/selUserRegistered',  // 注册--保洁员
    ],
    permission: {
      'scope.userLocation': {
        desc: '你的位置信息将用于小程序位置接口的效果展示'
      }
    },
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    }
  }

  globalData = {
    userInfo: {},
    // 接口请求路径
    requestUrl: 'http://192.168.1.181:8011/api/v1/wine_shop_api',
    // 图片路径
    requestImgUrl: 'http://192.168.1.181',
    apikey: '123456',
    token: ''
  }

  // constructor () {}

  onLaunch() {
    this.getToken()
  }
  // 获取用户信息
  // getUserInfo() {
  //   const that = this
  //   if (this.globalData.userInfo) {
  //     return this.globalData.userInfo
  //   }
  //   wepy.getUserInfo({
  //     success (res) {
  //       return res.userInfo
  //     }
  //   })
  // };
  // getCode() {
  //   wx.login({
  //       success: res => {
  //         if (res.code) {
  //           return res.code
  //         }
  //       }
  //   })
  // }
  getToken() {
    // wx.request({
    //   url: `${this.globalData.requestUrl}/auth/get_token`,
    //   method: 'POST',
    //   header: {
    //     apikey: this.globalData.apikey
    //   },
    //   data: {
    //     code: code
    //   },
    //   success: data => {
    //     data = this.null2str(data)
    //     console.log(data)
    //     let token = `${data.data.token_type} ${data.data.token}`
    //     console.log(token)
    //     return token
    //     // this.globalData['token'] = token
    //     // console.log(this.globalData.token)
    //   }
    // })
    wx.login({
        success: res => {
          if (res.code) {
            console.log(res.code)
            wx.request({
              url: `${this.globalData.requestUrl}/auth/get_token`,
              method: 'POST',
              header: {
                apikey: this.globalData.apikey
              },
              data: {
                code: res.code
              },
              success: data => {
                data = this.null2str(data)
                console.log(data)
                let token = `${data.data.token_type} ${data.data.token}`
                console.log(token)
                return token
              }
            })
          }
        }
    })
    
  }
  // 拨打电话
  runCall(e) {
    wx.makePhoneCall({
      phoneNumber: e.currentTarget.dataset.phone
    })
  }
  // 点击图片放大，长按后可操作
  shareQRCodeImg(e) {
    let url =  e.currentTarget.dataset.imgurl
    wx.previewImage({
      current: [url], // 当前显示图片的http链接   
      urls: [url] // 需要预览的图片http链接列表   
    })
  }
  // 删除照片
  deleImg(that, e) {
    var idx = e.currentTarget.dataset.idx
    var imgArr = that.data.imgArr || []
    imgArr.splice(idx, 1)
    that.setData({
      imgArr
    })
  }
  // 上传图片
  uploadImg(that) {
    var self = this
    wx.chooseImage({
      success: function (res) {
        wx.showToast({
          title: '图片上传中',
          icon: 'loading'
        });
        var imgArr = that.data.imgArr || [] // 放图片的数组
        var imgLength = that.data.imgLength || 6 //默认上传6张图片
        if (imgArr.length + res.tempFiles.length > imgLength) {
          wx.showToast({
            title: `最多上传${imgLength}张图片`,
            icon: 'none'
          })
          return false
        }
        Promise.all(res.tempFiles.map(item => {
          return new Promise((resolve, reject) => {
            wx.uploadFile({
              url: `${self.globalData.requestUrl}/work/upload_file`,
              filePath: item.path,
              name: 'photo',
              success(res) {
                resolve({
                  path: JSON.parse(res.data).data
                })
              }
            })
          })
        })).then(e => {
          wx.hideToast();
          that.setData({
            imgArr: imgArr.concat(e)
          })
        }).catch(err => console.log(err))
      },
    })
  }
  /**
  * 时间戳转时间
  */
  transformTime(timestamp = +new Date()) {
    if (timestamp) {
      var time = new Date(timestamp);
      var y = time.getFullYear(); //getFullYear方法以四位数字返回年份
      var M = time.getMonth() + 1; // getMonth方法从 Date 对象返回月份 (0 ~ 11)，返回结果需要手动加一
      var d = time.getDate(); // getDate方法从 Date 对象返回一个月中的某一天 (1 ~ 31)
      var h = time.getHours(); // getHours方法返回 Date 对象的小时 (0 ~ 23)
      var m = time.getMinutes(); // getMinutes方法返回 Date 对象的分钟 (0 ~ 59)
      var s = time.getSeconds(); // getSeconds方法返回 Date 对象的秒数 (0 ~ 59)
      return y + '-' + M + '-' + d + ' ' + h + ':' + m + ':' + s;
    } else {
      return '';
    }
  }
  /**
  * null => ''
  * @param {*} data 要处理的数据
  */
  null2str(data) {
    for (let x in data) {
      if (data[x] === null) { // 如果是null 把直接内容转为 ''
        data[x] = ''
      } else {
        if (Array.isArray(data[x])) { // 是数组遍历数组 递归继续处理
          data[x] = data[x].map(z => {
            return this.null2str(z)
          })
        }
        if(typeof(data[x]) === 'object'){ // 是json 递归继续处理
          data[x] = this.null2str(data[x])
        }
      }
    }
    return data
  }
  setStorageCityNode(cityList) {
    wx.setStorage({
      key: 'cityname',
      data: cityList.name
    })
    wx.setStorage({
      key: 'cityid',
      data: cityList.id
    })
  }
  getStorageCityNode() {
    var cityname = wx.getStorageSync('cityname')
    var cityid = wx.getStorageSync('cityid')
    return [cityname, cityid]
  }

}
</script>


<style lang="less">
#getUserInfo{
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  opacity: 0;
  z-index: 999;
}
.search{
  width: 690rpx;
  height: 90rpx;
  margin: 30rpx;
  border-radius: 90rpx;
  background-color: #F6F6F6;
  display: flex;
  align-items: center;
  justify-content: space-between;
  input{
    width: 540rpx;
    height: 30rpx;
    padding: 30rpx;
    color: #333333;
  }
  icon{
    width: 90rpx;
    height: 90rpx;
    font-size: 40rpx;
    color: #898989;
    display: flex;
    align-items: center;
    justify-content: center;
  }
}
.sub{
  z-index: 999;
  position: fixed;
  left: 0;
  bottom: 0;
  width: 750rpx;
  height: 190rpx;
  background-color: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
  view{
    width: 690rpx;
    height: 90rpx;
    color: #fff;
    font-size: 32rpx;
    font-weight: 600;
    border-radius: 90rpx;
    background: linear-gradient(to left,#30A2F4,#00E8BD);
    display: flex;
    align-items: center;
    justify-content: center;
  }
  icon{
    font-size: 32rpx;
    margin-right: 20rpx;
    display: flex;
    align-items: center;
    justify-content: center;
  }
}
button::after{
  border: 0;
}
button{
  background-color: none;
}
// 多选框样式
checkbox .wx-checkbox-input{
  border-radius: 50%;/* 圆角 */
  width: 40rpx; /* 背景的宽 */
  height: 40rpx; /* 背景的高 */
}
checkbox .wx-checkbox-input.wx-checkbox-input-checked{
  border: none;
  background: #fc6800;
}
checkbox .wx-checkbox-input.wx-checkbox-input-checked::before{
  border-radius: 50%;/* 圆角 */
  width: 40rpx;/* 选中后对勾大小，不要超过背景的尺寸 */
  height: 40rpx;/* 选中后对勾大小，不要超过背景的尺寸 */
  line-height: 40rpx;
  text-align: center;
  font-size:40rpx; /* 对勾大小 30rpx */
  color:#fff; /* 对勾颜色 白色 */
  background: transparent;
  // transform:translate(-50%, -50%) scale(1);
  // -webkit-transform:translate(-50%, -50%) scale(1);
}
@font-face {font-family: "iconfont";
  src: url('//at.alicdn.com/t/font_1426613_gfno7gts65.eot?t=1569204042302'); /* IE9 */
  src: url('//at.alicdn.com/t/font_1426613_gfno7gts65.eot?t=1569204042302#iefix') format('embedded-opentype'), /* IE6-IE8 */
  url('data:application/x-font-woff2;charset=utf-8;base64,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') format('woff2'),
  url('//at.alicdn.com/t/font_1426613_gfno7gts65.woff?t=1569204042302') format('woff'),
  url('//at.alicdn.com/t/font_1426613_gfno7gts65.ttf?t=1569204042302') format('truetype'), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */
  url('//at.alicdn.com/t/font_1426613_gfno7gts65.svg?t=1569204042302#iconfont') format('svg'); /* iOS 4.1- */
}

.iconfont {
  font-family: "iconfont" !important;
  font-size: 16px;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.icondingwei:before {
  content: "\e68a";
}

.iconfangjian:before {
  content: "\e68b";
}

.iconfanhui:before {
  content: "\e68c";
}

.iconxiayibu:before {
  content: "\e68d";
}

.iconwuxing:before {
  content: "\e68e";
}

.iconwuxing1:before {
  content: "\e68f";
}

.iconshouye:before {
  content: "\e690";
}

.iconwode:before {
  content: "\e691";
}

.icondingdan:before {
  content: "\e692";
}

.iconguanbi:before {
  content: "\e693";
}

.iconshangchuan-bei:before {
  content: "\e694";
}

.iconshangchuan-zhen:before {
  content: "\e695";
}

.icondingwei1:before {
  content: "\e696";
}

.icondanxuan:before {
  content: "\e697";
}

.iconweixin:before {
  content: "\e698";
}

.iconshangchuan:before {
  content: "\e699";
}

.iconrenzheng:before {
  content: "\e69a";
}

.iconshuoming:before {
  content: "\e69b";
}

.iconxiala:before {
  content: "\e69c";
}

.iconsousuo:before {
  content: "\e69d";
}

.iconguanbi1:before {
  content: "\e69e";
}

.icondanxuan1:before {
  content: "\e6a0";
}

.iconshangchuanzhaopian1:before {
  content: "\e6a1";
}

.iconwuxing2:before {
  content: "\e6a2";
}

</style>
