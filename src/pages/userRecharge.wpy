<template>
  <view>
    <view class="title">
      账户余额：<text>￥{{userInfo.wallet}}</text>
    </view>
    <view class="title" wx:if="{{userInfo.type == 1}}">
      可提现金额：
      <text wx:if="{{userInfo.wallet > withdrawLimit}}">￥{{userInfo.wallet - withdrawLimit}}</text>
      <text wx:if="{{userInfo.wallet <= withdrawLimit}}">￥0</text>
    </view>
    <view class="list">
      <repeat for="{{selRechargeList}}" item="item">
        <view @tap="selMoney" data-index="{{index}}" class="{{index == serNode?'active':''}}">{{item.money/100}}元</view>
      </repeat>
    </view>
    <view class="sub" wx:if="{{userInfo.type == 2}}">
      <view @tap="recharge">充值</view>
    </view>
    <view class="sub" wx:if="{{userInfo.type == 1}}">
      <view @tap="withdraw">提现</view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  export default class UserRecharge extends wepy.page {
    config = {
      navigationBarTitleText: '充值'
    }
    components = {}

    mixins = []

    data = {
      id: '',
      money: '',
      userInfo: {},
      serNode: 0,
      // selRechargeList: []
      selRechargeList: [
        {id: '1', money: 500},
        {id: '1', money: 1000},
        {id: '1', money: 5000},
        {id: '1', money: 10000},
        {id: '1', money: 50000},
        {id: '1', money: 100000},
      ],
      withdrawLimit: 0
    }

    computed = {}

    methods = {
      selMoney(e) {
        let index = e.currentTarget.dataset.index
        this.serNode = index
        this.money = this.selRechargeList[index].money
        this.$apply()
      }

    }

    events = {
      
    }

    onLoad() {
      this.money = this.selRechargeList[0].money
      this.userInfo = this.$parent.globalData.userInfo
      this.$apply()
      let name = ''
      if (this.userInfo.type == 2) {
        name = '充值'
      } else {
        name = '提现'
        // 提现金额限制
        this.getWithdrawLimit()
      }
      wx.setNavigationBarTitle({
        title: name
      })
    }
    // 提现
    withdraw() {
      let moneyNode = this.selRechargeList[this.serNode]
      let withdrawLimit = this.withdrawLimit
      if (this.userInfo.type == 1 && parseFloat(this.userInfo.wallet - withdrawLimit) < parseFloat(moneyNode.money/100)) {
        // console.log(123123)
        wx.showToast({
          title: `平台储蓄金需要大于${withdrawLimit}，如需提现请联系人工客服`,
          icon: 'none'
        });
        return false
      } else if (parseFloat(this.userInfo.wallet - withdrawLimit) < parseFloat(moneyNode.money/100)) {
        wx.showToast({
          title: "余额不足",
          icon: 'none'
        });
        return false
      }
      wx.showToast({
        title: "提现中...",
        icon: 'loading',
        duration: 1000000
      });
      wx.request({
        url: `${this.$parent.globalData.requestUrl}/health/withdrawal`,
        data: {
          type: 1,
          uid: this.userInfo.id,
          money: this.money
        },
        method: 'POST',
        success: data => {
          wx.hideToast()
          data = this.$parent.null2str(data)
          if (data.data.code === 1) {
            wx.showToast({
              title: "提现成功",
              icon: 'success',
              duration: 2000
            });
            setTimeout(() => {
              // wx.navigateBack({
              //   data: -1
              // })
              wx.reLaunch({
                url: `/pages/user`
              })
            }, 2000)
            this.$apply()
          } else {
            wx.showToast({
              title: data.data.msg,
              icon: 'none'
            });
          }
        }
      })
    }
    // 充值
    recharge() {
      wx.showToast({
        title: "拼命加载中...",
        icon: 'loading',
        duration: 1000000
      });
      wx.request({
        url: `${this.$parent.globalData.requestUrl}/basis/wx_pay`,
        data: {
          openid: this.userInfo.openid,
          money: this.money
        },
        method: 'POST',
        success: data => {
          wx.hideToast()
          data = this.$parent.null2str(data)
          if (data.data.code === 1) {
            this.runRecharge(data.data.data)
          } else {
            wx.showToast({
              title: data.data.msg,
              icon: 'none'
            });
          }
        }
      })
    }
    // 获取提现限制
    getWithdrawLimit() {
      wx.showToast({
        title: "加载中...",
        icon: 'loading',
        duration: 1000000
      });
      wx.request({
        url: `${this.$parent.globalData.requestUrl}/basis/withdrawal_set`,
        method: 'GET',
        success: data => {
          wx.hideToast()
          data = this.$parent.null2str(data)
          if (data.data.code == 1) {
            this.withdrawLimit = data.data.data
            this.$apply()
          } else {
            wx.showToast({
              title: data.data.msg,
              icon: 'none'
            });
          }
        }
      })
    }
    runRecharge(payNode) {
      wx.showToast({
        title: "充值加载中...",
        icon: 'loading',
        duration: 1000000
      });
      wx.requestPayment({
        'timeStamp': payNode.timestamp,
        'nonceStr': payNode.nonceStr,
        'package': payNode.package,
        'signType': payNode.signType,
        'paySign': payNode.paySign,
        'success': data => {
          wx.hideToast()
          wx.showToast({
            title: "充值成功",
            icon: 'success',
            duration: 2000
          });
          // 两秒后返回上一页
          setTimeout(e => {
            wx.navigateBack({
              data: -1
            })
          }, 2000)
        },
        'fail': data => {
          wx.hideToast()
          wx.showToast({
            title: "充值失败",
            icon: 'none',
            duration: 2000
          });
        }
      })
    }
  }
</script>
<style lang="less">
.title{
  width: 690rpx;
  height: auto;
  padding: 30rpx;
  border-top: 1rpx solid #E9E9E9;
  font-size: 32rpx;
  color: #222;
  text{
    color: #FE892F;
  }
}
.list{
  width: 690rpx;
  height: auto;
  padding: 0 30rpx;
  display: flex;
  align-items: center;
  justify-content: space-between;
  flex-direction: row;
  flex-wrap: wrap;
  view{
    width: 215rpx;
    height: 110rpx;
    border: 1rpx solid #30A2F4;
    border-radius: 10rpx;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #222;
    font-size: 40rpx;
    margin-bottom: 15rpx;
  }
  .active{
    background-color: #30A2F4;
    color: #fff;
  }
}
</style>