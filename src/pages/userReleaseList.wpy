<template>
  <view>
    <view class="release">
      <view @tap="goRelease">发布</view>
    </view>
    <view class="orderList">
      <repeat for="{{orderList}}" item="item">
        <view class="item">
          <!-- <image src="{{item.image_url}}" /> -->
          <view class="roomInfo">
            <text class="floor">{{item.room_floor}}层</text>
            <text class="num">{{item.room_num}}号房间</text>
            <text class="type_name">（{{item.type_name}}）</text>
          </view>
          <view class="cleaningInfo" wx:if="{{item.name != ''}}">
            <image src="{{item.img}}" />
            <text class="num">{{item.name}}(保洁接单)</text>
          </view>
          <view class="notCleaningInfo" wx:if="{{item.name == ''}}">无人接单</view>
          <view class="time">
            <text>预约时间：{{item.create_time}}</text>
            <text>创建时间：{{item.perform_time}}</text>
          </view>
        </view>
      </repeat>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  export default class UserReleaseList extends wepy.page {
    config = {
      navigationBarTitleText: '发单列表'
    }
    components = {}

    mixins = []

    data = {
      userInfo: {},
      requestImgUrl: '',
      orderList: []
    }

    computed = {}

    methods = {
      // 进入发布页
      goRelease() {
        let url = '/pages/userRelease'
        this.$navigate(url)
      }
      
    }

    events = {
      
    }

    onLoad() {
      this.userInfo = this.$parent.globalData.userInfo
      this.$apply()
      
    }
    onShow() {
      this.getWineList()
    }
    // 获取订单列表
    getWineList() {
      wx.request({
        url: `${this.$parent.globalData.requestUrl}/hotel/hotel_order`,
        data: {
          hid: this.userInfo.id
        },
        method: 'POST',
        success: data => {
          data = this.$parent.null2str(data)
          if (data.data.code === 1) {
            let orderList = data.data.data
            for (let i = 0; i < orderList.length; i++) {
              orderList[i].create_time = this.$parent.transformTime(parseInt(orderList[i].create_time) * 1000)
              orderList[i].perform_time = this.$parent.transformTime(parseInt(orderList[i].perform_time) * 1000)
            }
            this.orderList = orderList
            this.$apply()
          }
        }
      })
    }
  }
</script>
<style lang="less">
.release {
  width: 690rpx;
  height: auto;
  padding: 15rpx 30rpx;
  border-top: 1rpx solid #E9E9E9;
  display: flex;
  align-items: center;
  justify-content: flex-end;
  view{
    width: 160rpx;
    height: 60rpx;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 28rpx;
    color: #fff;
    border-radius: 60rpx;
    background: linear-gradient(to left,#30A2F4,#00E8BD);
  }
}
.orderList{
  width: 750rpx;
  height: auto;
  .item{
    width: 690rpx;
    height: auto;
    padding: 20rpx 0;
    margin: 0 30rpx;
    font-size: 28rpx;
    border-bottom: 1rpx solid #898989;
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-direction: column;
  }
  image{
    width: 60rpx;
    height: 69rpx;
    border-radius: 60rpx;
    margin-right: 20rpx;
  }
  view{
    width: 100%;
    padding: 15rpx 0;
    display: flex;
    align-items: center;
    justify-content: flex-start;
  }
  text{
    padding-right: 15rpx;
  }
  .roomInfo, .cleaningInfo {
    width: 100%;
  }
  .floor, .num{
    font-weight: 600;
    color: #282828;
  }
  .type_name{
    color: #30A2F4;
  }
  .notCleaningInfo{
    color: #898989;
  }
  .time{
    font-size: 25rpx;
    color: #898989;
    display: flex;
    align-items: center;
    justify-content: space-between;
    text{
      padding: 0;
    }
  }
}
</style>